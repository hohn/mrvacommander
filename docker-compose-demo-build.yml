# This is the compose configuration used to build / prepopulate the containers for
# a demo.
services:
    dbssvc:
        ## image: ghcr.io/hohn/dbsdata-container:0.1.24
        build:
            context: ./demo/containers/dbsdata
            dockerfile: Dockerfile
        container_name: dbssvc
        volumes:
            - dbsdata:/data/mrvacommander/dbstore-data
        networks:
            - backend
            
    dbstore:
        image: minio/minio:RELEASE.2024-06-11T03-13-30Z
        container_name: dbstore
        ports:
            - "9000:9000"
            - "9001:9001"
        env_file:
            - path: .env.container
              required: true
        command: server /data/mrvacommander/dbstore-data --console-address ":9001"
        depends_on:
            - dbssvc
        volumes:
            - dbsdata:/data/mrvacommander/dbstore-data
        networks:
            - backend
            
    client-ghmrva:
        ## image: ghcr.io/hohn/client-ghmrva-container:0.1.24 
        build:
            context: .
            dockerfile: ./client/containers/ghmrva/Dockerfile
        network_mode: "service:server" # Share the 'server' network namespace
        environment:
            - SERVER_URL=http://localhost:8080  # 'localhost' now refers to 'server'
            
    code-server:
        ## image: ghcr.io/hohn/code-server-initialized:0.1.24
        build:
            context: ./client/containers/vscode
            dockerfile: Dockerfile
        ports:
            - "9080:9080"
        environment:
            - PASSWORD=mrva
     
    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq
        container_name: rabbitmq
        volumes:
            - ./init/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
            - ./init/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
        ports:
            - "5672:5672"
            - "15672:15672"
        healthcheck:
            test: rabbitmq-diagnostics check_port_connectivity
            interval: 30s
            timeout: 30s
            retries: 10
        networks:
            - backend
     
    server:
        build:
            context: .
            dockerfile: ./cmd/server/Dockerfile
        command: [ '--mode=container', '--loglevel=debug' ]
        container_name: server
        stop_grace_period: 1s
        ports:
            # - "8081:8080" # host:container for proxy
            - "8080:8080" # host:container
        depends_on:
            - rabbitmq
            - dbstore
            - artifactstore
        env_file:
            - path: ./.env.container
              required: true
        networks:
            - backend
     
    artifactstore:
        image: minio/minio:RELEASE.2024-06-11T03-13-30Z
        container_name: artifactstore
        ports:
            - "19000:9000" # host:container
            - "19001:9001"
        env_file:
            - path: ./.env.container
              required: true
        command: server /data --console-address ":9001"
        volumes:
            # The artifactstore is only populated at runtime so there is no need
            # for Docker storage; a directory is fine.
            - ./qpstore-data:/data
        networks:
            - backend
     
    agent:
        ## image: ghcr.io/hohn/mrva-agent:0.1.24
        build:
          context: .
          dockerfile: ./cmd/agent/Dockerfile
        command: [ '--loglevel=debug' ]
        container_name: agent
        depends_on:
            - rabbitmq
            - dbstore
            - artifactstore
        env_file:
            - path: ./.env.container
              required: true
        networks:
            - backend
   
networks:
    backend:
        driver: bridge

volumes:
  dbsdata:

